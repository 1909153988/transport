{"remainingRequest":"D:\\项目\\jusheng1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\jusheng1\\src\\views\\client\\user\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\项目\\jusheng1\\src\\views\\client\\user\\index.vue","mtime":1627990487477},{"path":"D:\\项目\\jusheng1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\jusheng1\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\项目\\jusheng1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\jusheng1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+RA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA","file":"index.vue","sourceRoot":"src/views/client/user","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <el-form :model=\"queryParams\" ref=\"queryForm\" :inline=\"true\" v-show=\"showSearch\" label-width=\"68px\">\n      <el-form-item label=\"用户账号\" prop=\"userName\">\n        <el-input\n          v-model=\"queryParams.userName\"\n          placeholder=\"请输入用户账号\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n      <el-form-item label=\"用户昵称\" prop=\"nickName\">\n        <el-input\n          v-model=\"queryParams.nickName\"\n          placeholder=\"请输入用户昵称\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n\n      <el-form-item label=\"手机号码\" prop=\"phonenumber\">\n        <el-input\n          v-model=\"queryParams.phonenumber\"\n          placeholder=\"请输入手机号码\"\n          clearable\n          size=\"small\"\n          @keyup.enter.native=\"handleQuery\"\n        />\n      </el-form-item>\n\n      <el-form-item>\n        <el-button type=\"primary\" icon=\"el-icon-search\" size=\"mini\" @click=\"handleQuery\">搜索</el-button>\n        <el-button icon=\"el-icon-refresh\" size=\"mini\" @click=\"resetQuery\">重置</el-button>\n      </el-form-item>\n    </el-form>\n\n    <el-row :gutter=\"10\" class=\"mb8\">\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"primary\"\n          plain\n          icon=\"el-icon-plus\"\n          size=\"mini\"\n          @click=\"handleAdd\"\n          v-hasPermi=\"['consign:clientAccountUser:add']\"\n        >新增\n        </el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"success\"\n          plain\n          icon=\"el-icon-edit\"\n          size=\"mini\"\n          :disabled=\"single\"\n          @click=\"handleUpdate\"\n          v-hasPermi=\"['consign:clientAccountUser:edit']\"\n        >修改\n        </el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"danger\"\n          plain\n          icon=\"el-icon-delete\"\n          size=\"mini\"\n          :disabled=\"multiple\"\n          @click=\"handleDelete\"\n          v-hasPermi=\"['consign:clientAccountUser:remove']\"\n        >删除\n        </el-button>\n      </el-col>\n      <el-col :span=\"1.5\">\n        <el-button\n          type=\"warning\"\n          plain\n          icon=\"el-icon-download\"\n          size=\"mini\"\n          @click=\"handleExport\"\n          v-hasPermi=\"['consign:clientAccountUser:export']\"\n        >导出\n        </el-button>\n      </el-col>\n      <right-toolbar :showSearch.sync=\"showSearch\" @queryTable=\"getList\"></right-toolbar>\n\n    </el-row>\n\n    <el-table v-loading=\"loading\" :data=\"userList\" @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\" align=\"center\"/>\n      <el-table-column label=\"用户ID\" align=\"center\" prop=\"userId\"/>\n\n      <el-table-column label=\"所属机构\" align=\"center\" prop=\"companyName\"/>\n      <el-table-column label=\"用户账号\" align=\"center\" prop=\"userName\"/>\n      <el-table-column label=\"用户昵称\" align=\"center\" prop=\"nickName\"/>\n      <el-table-column label=\"用户邮箱\" align=\"center\" prop=\"email\"/>\n      <el-table-column label=\"手机号码\" align=\"center\" prop=\"phonenumber\"/>\n      <el-table-column label=\"用户性别\" align=\"center\" prop=\"sex\"/>\n      <!--      <el-table-column label=\"头像地址\" align=\"center\" prop=\"avatar\" />-->\n      <el-table-column label=\"帐号状态\" align=\"center\" prop=\"status\"/>\n\n      <el-table-column label=\"备注\" align=\"center\" prop=\"remark\"/>\n      <el-table-column label=\"操作\" align=\"center\" class-name=\"small-padding fixed-width\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-edit\"\n            @click=\"handleUpdate(scope.row)\"\n            v-hasPermi=\"['consign:clientAccountUser:edit']\"\n          >修改\n          </el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            icon=\"el-icon-delete\"\n            @click=\"handleDelete(scope.row)\"\n            v-hasPermi=\"['consign:clientAccountUser:remove']\"\n          >删除\n          </el-button>\n\n\n          <el-button type=\"text\" plain icon=\"el-icon-edit\" size=\"mini\" @click=\"Assign(scope.row)\"\n                     v-hasPermi=\"['consign:clientAccountUser:roleList']\">分配角色\n          </el-button>\n          <el-button type=\"text\" plain icon=\"el-icon-edit\" size=\"mini\" @click=\"Jurisdiction(scope.row)\"\n                     v-hasPermi=\"['consign:clientAccountUser:menuList']\">分配权限\n          </el-button>\n\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <pagination\n      v-show=\"total>0\"\n      :total=\"total\"\n      :page.sync=\"queryParams.pageNum\"\n      :limit.sync=\"queryParams.pageSize\"\n      @pagination=\"getList\"\n    />\n\n    <!-- 添加或修改用户信息对话框 -->\n    <el-dialog :title=\"title\" :visible.sync=\"open\" width=\"500px\" append-to-body>\n      <el-form ref=\"form\" :model=\"form\" :rules=\"rules\" label-width=\"80px\">\n        <!--        <el-form-item label=\"父账号ID\" prop=\"parentId\">-->\n        <!--          <el-input v-model=\"form.parentId\" placeholder=\"请输入父账号ID\" />-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"公司ID\" prop=\"companyId\">-->\n        <!--          <el-input v-model=\"form.companyId\" placeholder=\"请输入公司ID\" />-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"自定义角色ID\" prop=\"roleId\">-->\n        <!--          <el-input v-model=\"form.roleId\" placeholder=\"请输入自定义角色ID\" />-->\n        <!--        </el-form-item>-->\n        <!--        <el-form-item label=\"部门ID 暂时无用\" prop=\"deptId\">-->\n        <!--          <el-input v-model=\"form.deptId\" placeholder=\"请输入部门ID 暂时无用\" />-->\n        <!--        </el-form-item>-->\n\n        <template>\n          <el-form-item label=\"所属公司机构\" prop=\"companyValue\">\n\n            <el-select v-model.trim=\"companyValue\" placeholder=\"请选择所属机构\" style=\"width: 200px;\">\n              <el-option style=\"width: 200px\"\n                         v-for=\"item in companys\"\n                         :key=\"item.companyId\"\n                         :label=\"item.companyName\"\n                         :value=\"item.companyId\">\n                <span style=\"float: left\">{{ item.companyName  }}</span>\n                <!--              <span style=\"float: right; color: #8492a6; font-size: 13px\">{{ item.companyName}}</span>-->\n              </el-option>\n            </el-select>\n          </el-form-item>\n        </template>\n\n\n        <el-form-item label=\"用户账号(用于登录)\" prop=\"userName\">\n          <el-input v-model=\"form.userName\" placeholder=\"请输入用户账号\"/>\n        </el-form-item>\n\n        <el-form-item label=\"用户昵称\" prop=\"nickName\">\n          <el-input v-model=\"form.nickName\" placeholder=\"请输入用户姓名\"/>\n        </el-form-item>\n\n        <el-form-item label=\"用户邮箱\" prop=\"email\">\n          <el-input v-model=\"form.email\" placeholder=\"请输入用户邮箱\"/>\n        </el-form-item>\n        <el-form-item label=\"手机号码(用于登录)\" prop=\"phonenumber\">\n          <el-input v-model=\"form.phonenumber\" placeholder=\"请输入手机号码\"/>\n        </el-form-item>\n\n        <el-form-item label=\"用户性别\" prop=\"sex\">\n          <div>\n            <el-radio v-model=\"form.sex\" label=\"0\" border>男</el-radio>\n            <el-radio v-model=\"form.sex\" label=\"1\" border>女</el-radio>\n          </div>\n        </el-form-item>\n\n\n        <el-form-item label=\"账号状态\"   prop=\"status\">\n          <div>\n            <el-radio style=\"color: blue\" v-model=\"form.status\" label=\"0\" border>正常</el-radio>\n            <el-radio style=\"color: red\" v-model=\"form.status\" label=\"1\" border>停用</el-radio>\n          </div>\n        </el-form-item>\n\n\n        <el-form-item label=\"密码\" prop=\"password\">\n          <el-input v-model=\"form.password\" placeholder=\"请输入密码\"/>\n        </el-form-item>\n\n        <el-form-item label=\"确认密码\" prop=\"conPassword\">\n          <el-input v-model=\"form.conPassword\" placeholder=\"请输入密码\"/>\n        </el-form-item>\n\n        <el-form-item label=\"备注\" prop=\"remark\">\n          <el-input v-model=\"form.remark\" type=\"textarea\" placeholder=\"请输入内容\"/>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" @click=\"submitForm\">确 定</el-button>\n        <el-button @click=\"cancel\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n\n    <!-- 分配角色对话框 -->\n    <el-dialog :title=\"roleTitle\" :visible.sync=\"roleOpen\" label-width=\"600px\" height=\"500px\" append-to-body>\n      <el-form ref=\"roleFormData\" :model=\"roleFormData\" :rules=\"rules\" size=\"medium\" label-width=\"100px\">\n        <el-col :span=\"15\">\n          <el-form-item label=\"选择角色\" prop=\"field\">\n            <el-checkbox :indeterminate=\"isIndeterminate\" v-model=\"checkAll\" @change=\"roleHandleCheckAllChange\">全选\n            </el-checkbox>\n\n            <el-checkbox-group v-model=\"roleFormData.field\" size=\"medium\" @change=\"roleHandleCheckedCitiesChange\">\n              <el-checkbox v-for=\"(item, index) in roleFieldOptions\" :key=\"index\" :label=\"item.roleId\"\n                           :disabled=\"item.disabled\">{{item.roleName}}\n              </el-checkbox>\n            </el-checkbox-group>\n          </el-form-item>\n        </el-col>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"primary\" v-hasPermi=\"['consign:clientAccountUser:roleList']\" @click=\"submitUserRoleForm\">确 定\n        </el-button>\n        <el-button @click=\"roleOpen = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n\n\n\n    <!-- 分配权限菜单 -->\n\n    <el-dialog :title=\"menuTitle\" :visible.sync=\"menuOpen\" width=\"90%\" style=\"height:100%; \" append-to-body :close-on-press-escape=\"false\" :close-on-click-modal=\"false\">\n      <el-form ref=\"menuForm\" :model=\"menuForm\" :rules=\"rules\" label-width=\"100px\"    >\n        <el-form-item label=\"菜单权限\">\n          <el-checkbox v-model=\"menuExpand\" @change=\"handleCheckedTreeExpand($event, 'menu')\">展开/折叠</el-checkbox>\n          <el-checkbox v-model=\"menuNodeAll\" @change=\"handleCheckedTreeNodeAll($event, 'menu')\">全选/全不选</el-checkbox>\n          <el-checkbox v-model=\"menuForm.menuCheckStrictly\" @change=\"handleCheckedTreeConnect($event, 'menu')\">父子联动\n          </el-checkbox>\n          <el-tree\n            :data=\"menuOptions\"\n            show-checkbox\n            default-expand-all\n            ref=\"menu\"\n            node-key=\"id\"\n            :check-strictly=\"!menuForm.menuCheckStrictly\"\n            empty-text=\"加载中，请稍后\"\n            :props=\"defaultProps\"\n            :expand-on-click-node=\"false\"\n            :highlight-current=\"true\"\n            :render-content=\"renderContent\"\n          ></el-tree>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\" style=\"position:fixed;bottom:0px;  width: 80%\">\n        <el-button type=\"primary\"   v-hasPermi=\"['consign:clientAccountUser:menuList']\"  @click=\"submitUserMenuIdsForm\">确 定</el-button>\n        <el-button @click=\"menuOpen = false\">取 消</el-button>\n      </div>\n    </el-dialog>\n\n\n  </div>\n</template>\n\n<script>\n  import {\n    addUser,\n    clientCompanyList,\n    delUser,\n    exportUser,\n    getAssign,\n    getUser,\n    listUser,\n    updateUser,\n    updateUserRoleID,\n    roleMenuTreeselect,\n    updateUserMenuID\n  } from \"@/api/client/user\";\n\n  export default {\n    name: \"User\",\n    components: {},\n    data() {\n      return {\n        // 遮罩层\n        loading: true,\n        // 选中数组\n        ids: [],\n        // 非单个禁用\n        single: true,\n        // 非多个禁用\n        multiple: true,\n        // 显示搜索条件\n        showSearch: true,\n        // 总条数\n        total: 0,\n        // 用户信息表格数据\n        userList: [],\n        // 弹出层标题\n        title: \"\",\n        // 是否显示弹出层\n        open: false,\n        // 查询参数\n        queryParams: {\n          pageNum: 1,\n          pageSize: 10,\n          parentId: null,\n          companyId: null,\n          userName: null,\n          nickName: null,\n          userType: null,\n          email: null,\n          phonenumber: null,\n          sex: null,\n          status: null,\n\n        },\n        // 表单参数\n        form: {sex: '0',status:'0'},\n        // 表单校验\n        rules: {\n\n          userName: [\n            {required: true, message: \"用户账号不能为空\", trigger: \"blur\"}\n          ],\n          nickName: [\n            {required: true, message: \"用户姓名不能为空\", trigger: \"blur\"}\n          ],\n\n          phonenumber: [\n            {required: true, message: \"手机号码不能为空\", trigger: \"blur\"}\n          ],\n        },\n        companyValue: null,\n        companys: [],\n\n\n        roleOpen: false, //分配角色弹出层\n        roleTitle: \"\", //分配角色弹出层标题\n        ////角色\n        checkAll: false,\n        isIndeterminate: false,\n        //已勾选角色数据\n        roleFormData: {\n          field: []\n        },\n        //角色数据源\n        roleFieldOptions: [],\n\n        menuTitle:\"\",\n        menuOpen:false,\n\n        //分配权限的\n        menuExpand: true,\n        menuNodeAll: false,\n        // 菜单列表\n        menuOptions: [],\n        menuForm: {\n          menuIds: [],\n          menuCheckStrictly: true\n\n        },\n        defaultProps: {\n          children: 'children',\n          label: 'label'\n        },\n\n      };\n    },\n    created() {\n      this.getList();\n    },\n    methods: {\n      /** 查询用户信息列表 */\n      getList() {\n        this.loading = true;\n        listUser(this.queryParams).then(response => {\n          this.userList = response.rows;\n          this.total = response.total;\n          this.loading = false;\n        });\n      },\n      // 取消按钮\n      cancel() {\n        this.open = false;\n        this.reset();\n      },\n      // 表单重置\n      reset() {\n        this.form = {\n          userId: null,\n          parentId: null,\n          companyId: null,\n          roleId: null,\n          deptId: null,\n          userName: null,\n          nickName: null,\n          userType: null,\n          email: null,\n          phonenumber: null,\n          sex: '0',\n          avatar: null,\n          password: \"\",\n          conPassword: \"\",\n          status: \"0\",\n          remark: null\n        };\n        this.resetForm(\"form\");\n      },\n      /** 搜索按钮操作 */\n      handleQuery() {\n        this.queryParams.pageNum = 1;\n        this.getList();\n      },\n      /** 重置按钮操作 */\n      resetQuery() {\n        this.resetForm(\"queryForm\");\n        this.handleQuery();\n      },\n      // 多选框选中数据\n      handleSelectionChange(selection) {\n        this.ids = selection.map(item => item.userId)\n        this.single = selection.length !== 1\n        this.multiple = !selection.length\n      },\n\n\n      //查询机构\n      getClientCompanyInfoList() {\n        this.loading = true;\n        clientCompanyList().then(response => {\n          if (response != null) {\n\n            if (response.code != null && response.code != undefined && response.code == 200) {\n              if (response.data != null && response.data != undefined) {\n                const dataList = response.data;\n                this.companys = dataList;\n              }\n\n            }\n          }\n        });\n        this.loading = false;\n      },\n\n\n      /** 新增按钮操作 */\n      handleAdd() {\n        this.reset();\n        this.companyValue = null;\n        this.getClientCompanyInfoList();\n        this.open = true;\n        this.title = \"添加用户信息\";\n      },\n      /** 修改按钮操作 */\n      handleUpdate(row) {\n        this.reset();\n        const userId = row.userId || this.ids\n        getUser(userId).then(response => {\n          this.form = response.data;\n          this.getClientCompanyInfoList();\n// alert( response.data.companyIdChar)\n          this.companyValue = this.form.companyIdChar;\n          this.open = true;\n          this.title = \"修改用户信息\";\n        });\n      },\n      /** 提交按钮 */\n      submitForm() {\n        this.$refs[\"form\"].validate(valid => {\n          if (valid) {\n            this.form.companyId = this.companyValue;\n            if (this.form.userId != null) {\n              updateUser(this.form).then(response => {\n                this.msgSuccess(\"修改成功\");\n                this.open = false;\n                this.getList();\n              });\n            } else {\n              addUser(this.form).then(response => {\n                this.msgSuccess(\"新增成功\");\n                this.open = false;\n                this.getList();\n              });\n            }\n          }\n        });\n      },\n      /** 删除按钮操作 */\n      handleDelete(row) {\n        const userIds = row.userId || this.ids;\n        this.$confirm('是否确认删除用户信息编号为\"' + userIds + '\"的数据项?', \"警告\", {\n          confirmButtonText: \"确定\",\n          cancelButtonText: \"取消\",\n          type: \"warning\"\n        }).then(function () {\n          return delUser(userIds);\n        }).then(() => {\n          this.getList();\n          this.msgSuccess(\"删除成功\");\n        })\n      },\n      /** 导出按钮操作 */\n      handleExport() {\n        this.download('/client/clientAccountUser/export', {\n          ...this.companyParams\n        }, `user_${new Date().getTime()}.xlsx`)\n\n      },\n\n      // -----------------------------------------------------------------分配角色  分配权限---------------------------------------------------------------------------------------------\n\n\n      //分配角色\n      Assign(row) {\n        this.roleTitle = '分配角色'\n        this.roleOpen = true;\n\n        this.checkAll = false;\n        this.isIndeterminate = false;\n        this.roleFieldOptions = [];\n        this.roleFormData.field = [];\n\n        const userId = row.userId || this.ids;\n        getAssign(userId).then(response => {\n          if (response.code == 200) {\n            this.roleFieldOptions = response.roles;\n            this.roleFormData.field = response.roleIds;\n            this.roleTitle = '分配角色';\n            this.roleOpen = true;\n            this.form.userId = userId;\n            if (this.roleFieldOptions.length == this.roleFormData.field.length) {\n              this.checkAll = true;\n              this.isIndeterminate = false;\n\n            } else if (this.roleFormData.field.length > 0) {\n\n              this.checkAll = false;\n              this.isIndeterminate = true;\n            } else {\n\n              this.checkAll = false;\n              this.isIndeterminate = false;\n            }\n          } else {\n            this.msgError(\"查询角色信息失败\");\n\n          }\n        })\n\n      },\n      ////角色提交\n      submitUserRoleForm() {\n        this.$refs['roleFormData'].validate(valid => {\n          if (valid) {\n            if (this.form.userId != undefined) {\n              let roleData = {\n                userId: this.form.userId,\n                roleIds: this.roleFormData.field\n              }\n\n              updateUserRoleID(roleData).then(response => {\n                this.msgSuccess('更新成功')\n                this.roleOpen = false\n                this.getList()\n              })\n\n            } else {\n              this.msgError('用户信息异常！')\n            }\n          } else {\n            this.msgError('请完成必填项！')\n          }\n        })\n\n      },\n      // 角色权限全选\n      roleHandleCheckAllChange(val) {\n        this.roleFormData.field = []\n        this.roleFieldOptions.forEach(item => {\n          this.roleFormData.field.push(item.roleId)\n        })\n        this.roleFormData.field = val ? this.roleFormData.field : []\n        this.isIndeterminate = false\n      },\n      ///角色单选事件\n      roleHandleCheckedCitiesChange(value) {\n        let checkedCount = value.length   //选中值的长度\n        this.checkAll = checkedCount === this.roleFieldOptions.length\n        this.isIndeterminate = checkedCount > 0 && checkedCount < this.roleFieldOptions.length\n\n      },\n\n\n      // ------------------------------------------------------------------------------分配权限---------------------------------------------------------------\n      //分配权限\n      Jurisdiction(row) {\n        this.menuTitle = '分配权限菜单'\n        this.menuOpen = true\n        const userId = row.userId || this.ids\n        const roleId = row.roleId || this.ids\n        const roleMenu = this.getRoleMenuTreeselect(row.userId)\n\n        this.form.userId = userId\n        this.form.roleId = roleId\n\n        this.$nextTick(() => {\n          roleMenu.then(res => {\n            let checkedKeys = res.checkedKeys\n\n            this.changeCss()///横向展开\n\n            checkedKeys.forEach((v) => {\n              this.$nextTick(() => {\n                this.$refs.menu.setChecked(v, true, false)\n              })\n            })\n          })\n        })\n\n      },\n\n      /** 根据角色ID查询菜单树结构 */\n      getRoleMenuTreeselect(roleId) {\n        return roleMenuTreeselect(roleId).then(response => {\n          this.menuOptions = response.menus\n          return response\n        })\n      },\n\n\n      // 树权限（展开/折叠）\n      handleCheckedTreeExpand(value, type) {\n        if (type == 'menu') {\n          let treeList = this.menuOptions\n          for (let i = 0; i < treeList.length; i++) {\n            this.$refs.menu.store.nodesMap[treeList[i].id].expanded = value\n          }\n        }\n      },\n      // 树权限（全选/全不选）\n      handleCheckedTreeNodeAll(value, type) {\n        if (type == 'menu') {\n          this.$refs.menu.setCheckedNodes(value ? this.menuOptions : [])\n        }\n      },\n      // 树权限（父子联动）\n      handleCheckedTreeConnect(value, type) {\n        if (type == 'menu') {\n          this.form.menuCheckStrictly = value ? true : false\n        }\n      },\n      // 所有菜单节点数据\n      getMenuAllCheckedKeys() {\n        // 目前被选中的菜单节点\n        let checkedKeys = this.$refs.menu.getCheckedKeys()\n        // 半选中的菜单节点\n        let halfCheckedKeys = this.$refs.menu.getHalfCheckedKeys()\n        checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\n        return checkedKeys\n      },\n\n      ////角色提交\n      submitUserMenuIdsForm() {\n        this.$refs['menuForm'].validate(valid => {\n          if (valid) {\n            if (this.form.userId != undefined) {\n              this.menuForm.menuIds = this.getMenuAllCheckedKeys();///获取选择菜单ID\n\n              let  menuData={\n                roleId:this.form.roleId,\n                menuIds:this.menuForm.menuIds\n              };\n              updateUserMenuID(menuData).then(response => {\n                this.msgSuccess('更新成功')\n                this.menuOpen = false;\n                this.getList()\n              })\n\n            } else {\n              this.msgError('用户信息异常！')\n            }\n          } else {\n            this.msgError('请完成必填项！')\n          }\n        })\n\n      },\n\n      ////菜单展开样式\n\n      changeCss() {\n        var levelName_one = document.getElementsByClassName('custom-tree-one') // levelname是上面的最底层节点的名字\n        for (var i = 0; i < levelName_one.length; i++) {\n          // cssFloat 兼容 ie6-8  styleFloat 兼容ie9及标准浏览器\n          // levelName_one[i].parentNode.style.cssFloat = \"left\"; // 最底层的节点，包括多选框和名字都让他左浮动\n          levelName_one[i].parentNode.style.styleFloat = 'left'\n          levelName_one[i].parentNode.style.styleFloat = 'left'\n          levelName_one[i].parentNode.style.color = '#000000'\n          levelName_one[i].parentNode.style.fontSize = '18px'\n          // levelName_one[i].parentNode.style.backgroundColor = '#999999'\n\n        }\n        var levelName_two = document.getElementsByClassName('custom-tree-two') // levelname是上面的最底层节点的名字\n        for (var i = 0; i < levelName_two.length; i++) {\n          // cssFloat 兼容 ie6-8  styleFloat 兼容ie9及标准浏览器\n          // levelName_two[i].parentNode.style.cssFloat = \"left\"; // 最底层的节点，包括多选框和名字都让他左浮动\n          levelName_two[i].parentNode.style.styleFloat = 'left'\n          levelName_two[i].parentNode.style.styleFloat = 'left'\n          levelName_two[i].parentNode.style.color = 'blue'\n          levelName_two[i].parentNode.style.fontSize = '16px'\n          levelName_two[i].parentNode.style.marginTop = '10px'\n          // levelName_two[i].parentNode.style.borderTop = 'solid 1px red'\n\n        }\n\n        var levelName_three = document.getElementsByClassName('custom-tree-three') // levelname是上面的最底层节点的名字\n        for (var i = 0; i < levelName_three.length; i++) {\n          // cssFloat 兼容 ie6-8  styleFloat 兼容ie9及标准浏览器\n          levelName_three[i].parentNode.style.cssFloat = 'left' // 最底层的节点，包括多选框和名字都让他左浮动\n          levelName_three[i].parentNode.style.styleFloat = 'left'\n          levelName_three[i].parentNode.style.styleFloat = 'left'\n          levelName_three[i].parentNode.style.color = '#1e6620'\n          levelName_three[i].parentNode.style.fontSize = '16px'\n\n        }\n\n        var levelName_four = document.getElementsByClassName('custom-tree-four') // levelname是上面的最底层节点的名字\n        for (var i = 0; i < levelName_four.length; i++) {\n          // cssFloat 兼容 ie6-8  styleFloat 兼容ie9及标准浏览器\n          // levelName_four[i].parentNode.style.cssFloat = \"left\"; // 最底层的节点，包括多选框和名字都让他左浮动\n          levelName_four[i].parentNode.style.styleFloat = 'left'\n          levelName_four[i].parentNode.style.styleFloat = 'left'\n          levelName_four[i].parentNode.style.color = '#1e6620'\n          levelName_four[i].parentNode.style.fontSize = '16px'\n\n        }\n\n      },\n\n      renderContent(h, { node, data, store }) {\n        let classname = ''\n        // 由于项目中有三级菜单也有四级级菜单，就要在此做出判断\n        if (node.level === 1) {\n          classname = 'custom-tree-one'\n        } else if (node.level === 2) {\n          classname = 'custom-tree-two'\n        } else if (node.level === 3) {\n          classname = 'custom-tree-three'\n        } else if (node.level === 4 && node.childNodes.length === 0) {\n          classname = 'custom-tree-four'\n        }\n\n        return h(\n          'p',\n          {\n            class: classname\n          },\n          node.label\n        )\n      }\n\n\n\n\n\n\n\n    }\n  };\n</script>\n"]}]}