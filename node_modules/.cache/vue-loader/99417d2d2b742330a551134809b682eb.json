{"remainingRequest":"D:\\项目\\jusheng1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\项目\\jusheng1\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\项目\\jusheng1\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\项目\\jusheng1\\src\\views\\transport\\receipt\\index1.vue?vue&type=template&id=67a84116&scoped=true&","dependencies":[{"path":"D:\\项目\\jusheng1\\src\\views\\transport\\receipt\\index1.vue","mtime":1627990492553},{"path":"D:\\项目\\jusheng1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\jusheng1\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\项目\\jusheng1\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\项目\\jusheng1\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}